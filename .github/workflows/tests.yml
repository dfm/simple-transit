name: Tests

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        pymc-version: ["3.9", "3.10", "3.11", "dev"]
        include:
          - python-version: "3.8"
            pymc-version: "3.11"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install tox tox-gh-actions

      - name: Run tests
        run: python -m tox
        env:
          PYMC_VERSION: ${{ matrix.pymc-version }}

      - name: Coveralls
        uses: AndreMiras/coveralls-python-action@v20201129
        with:
          parallel: true
          flag-name: Unit Tests

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install tox

      - name: Lint the code
        run: python -m tox -e lint

  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@v20201129
        with:
          parallel-finished: true

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.9"
      - name: Build sdist and wheel
        run: |
          python -m pip install -U pip
          python -m pip install -U build
          python -m build .
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*

  upload_pypi:
    needs: [tests, lint, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
